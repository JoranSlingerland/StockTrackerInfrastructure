{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1272.37030",
      "templateHash": "1338853961591221744"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "westeurope"
    },
    "resourceGroupNames": {
      "type": "array",
      "defaultValue": [
        {
          "name": "rg-mgmt-prod-westeu-001",
          "lockResourceGroup": false
        },
        {
          "name": "rg-sql-prod-westeu-001",
          "lockResourceGroup": false
        },
        {
          "name": "rg-func-prod-westeu-001",
          "lockResourceGroup": false
        }
      ]
    },
    "basetime": {
      "type": "string",
      "defaultValue": "[utcNow('u')]"
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "env": "prod",
        "utcdatedeployed": "[parameters('basetime')]",
        "project": "Stocktracker"
      }
    },
    "sqlServerName": {
      "type": "string",
      "defaultValue": "sql-stocktracker-prod-westeu-001"
    },
    "localAdminUsername": {
      "type": "string",
      "defaultValue": "azadmin"
    },
    "localAdminPassword": {
      "type": "secureString"
    },
    "kvNamePrefix": {
      "type": "string",
      "defaultValue": "kv-"
    },
    "server": {
      "type": "secureString"
    },
    "database": {
      "type": "secureString"
    },
    "apiKey": {
      "type": "secureString"
    },
    "sqlDatabases": {
      "type": "array",
      "defaultValue": [
        {
          "name": "sqldb-stocktracker-prod-westeu-001",
          "dtu": 10
        }
      ]
    }
  },
  "variables": {
    "sqlServerRg": "[createObject()]",
    "kvRg": "[createObject()]",
    "functionRg": "[createObject()]",
    "appServicePlanNamePrefix": "plan-",
    "functionNamePrefix": "func-",
    "stNamePrefix": "st",
    "sqlDatabaseRg": "[createObject()]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "resourceGroupDeployment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupNames": {
            "value": "[parameters('resourceGroupNames')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "11690585253532459689"
            }
          },
          "parameters": {
            "resourceGroupNames": {
              "type": "array"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "copy": {
                "name": "resourceGroupDeployment",
                "count": "[length(parameters('resourceGroupNames'))]",
                "mode": "serial",
                "batchSize": 2
              },
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[parameters('resourceGroupNames')[copyIndex()].name]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {}
            },
            {
              "condition": "[parameters('resourceGroupNames')[copyIndex()].lockResourceGroup]",
              "copy": {
                "name": "deployRgLock",
                "count": "[length(parameters('resourceGroupNames'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "lockDeployment",
              "resourceGroup": "[parameters('resourceGroupNames')[copyIndex()].name]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "17098131161041977861"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/locks",
                      "apiVersion": "2016-09-01",
                      "name": "rgLock",
                      "properties": {
                        "level": "CanNotDelete",
                        "notes": "Resource group and its resources should not be deleted."
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupNames')[copyIndex()].name)]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "sqlServer",
      "resourceGroup": "[parameters('resourceGroupNames')[1].name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "tags": {
            "value": "[parameters('tags')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "administratorLogin": {
            "value": "[parameters('localAdminUsername')]"
          },
          "administratorLoginPassword": {
            "value": "[parameters('localAdminPassword')]"
          },
          "serverName": {
            "value": "[parameters('sqlServerName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "10664986597911412535"
            }
          },
          "parameters": {
            "administratorLogin": {
              "type": "string"
            },
            "administratorLoginPassword": {
              "type": "secureString"
            },
            "location": {
              "type": "string"
            },
            "serverName": {
              "type": "string"
            },
            "enableADS": {
              "type": "bool",
              "defaultValue": false
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2019-06-01-preview",
              "name": "[parameters('serverName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "version": "12.0"
              }
            },
            {
              "type": "Microsoft.Sql/servers/firewallRules",
              "apiVersion": "2021-05-01-preview",
              "name": "[format('{0}/{1}', parameters('serverName'), 'public')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
              ]
            },
            {
              "condition": "[parameters('enableADS')]",
              "type": "Microsoft.Sql/servers/securityAlertPolicies",
              "apiVersion": "2017-03-01-preview",
              "name": "[format('{0}/{1}', parameters('serverName'), 'Default')]",
              "properties": {
                "state": "Enabled",
                "emailAccountAdmins": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', 'resourceGroupDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "sqlDatabase",
      "resourceGroup": "[parameters('resourceGroupNames')[1].name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "tags": {
            "value": "[parameters('tags')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sqlServerName": {
            "value": "[parameters('sqlServerName')]"
          },
          "sqlDatabases": {
            "value": "[parameters('sqlDatabases')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "5286837130215169723"
            }
          },
          "parameters": {
            "sqlServerName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "sqlDatabases": {
              "type": "array"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "copy": {
                "name": "sqlDatabase",
                "count": "[length(parameters('sqlDatabases'))]",
                "mode": "serial",
                "batchSize": 2
              },
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2021-02-01-preview",
              "name": "[format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name)]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": "[parameters('sqlDatabases')[copyIndex()].dtu]"
              },
              "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 268435456000,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "requestedBackupStorageRedundancy": "Geo",
                "maintenanceConfigurationId": "/subscriptions/6632c3ab-c4fa-4d1e-956e-66bd7e515d44/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default",
                "isLedgerOn": false
              }
            },
            {
              "copy": {
                "name": "auditingPolicy",
                "count": "[length(parameters('sqlDatabases'))]"
              },
              "type": "Microsoft.Sql/servers/databases/auditingPolicies",
              "apiVersion": "2014-04-01",
              "name": "[format('{0}/{1}/{2}', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[1], 'Default')]",
              "properties": {
                "auditingState": "Disabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[1])]"
              ]
            },
            {
              "copy": {
                "name": "longTermRetention",
                "count": "[length(parameters('sqlDatabases'))]"
              },
              "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
              "apiVersion": "2017-03-01-preview",
              "name": "[format('{0}/{1}/{2}', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[1], 'Default')]",
              "properties": {
                "weeklyRetention": "PT0S",
                "monthlyRetention": "PT0S",
                "yearlyRetention": "PT0S",
                "weekOfYear": 1
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases/auditingPolicies', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[1], 'Default')]",
                "[resourceId('Microsoft.Sql/servers/databases', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[1])]"
              ]
            },
            {
              "copy": {
                "name": "shortTermRetention",
                "count": "[length(parameters('sqlDatabases'))]"
              },
              "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
              "apiVersion": "2017-10-01-preview",
              "name": "[format('{0}/{1}/{2}', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[1], 'Default')]",
              "properties": {
                "retentionDays": 7
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[1], 'Default')]",
                "[resourceId('Microsoft.Sql/servers/databases', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[1])]"
              ]
            },
            {
              "copy": {
                "name": "geoBackupPolicy",
                "count": "[length(parameters('sqlDatabases'))]"
              },
              "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
              "apiVersion": "2014-04-01",
              "name": "[format('{0}/{1}/{2}', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[1], 'Default')]",
              "properties": {
                "state": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[1], 'Default')]",
                "[resourceId('Microsoft.Sql/servers/databases', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[1])]"
              ]
            },
            {
              "copy": {
                "name": "encryption",
                "count": "[length(parameters('sqlDatabases'))]"
              },
              "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
              "apiVersion": "2014-04-01",
              "name": "[format('{0}/{1}/{2}', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[1], 'current')]",
              "properties": {
                "status": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases/geoBackupPolicies', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[1], 'Default')]",
                "[resourceId('Microsoft.Sql/servers/databases', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabases')[copyIndex()].Name), '/')[1])]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', 'resourceGroupDeployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupNames')[1].name), 'Microsoft.Resources/deployments', 'sqlServer')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "kvName",
      "resourceGroup": "[parameters('resourceGroupNames')[0].name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "kvNamePrefix": {
            "value": "[parameters('kvNamePrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "12788631430716794089"
            }
          },
          "parameters": {
            "kvNamePrefix": {
              "type": "string"
            }
          },
          "variables": {
            "kvName": "[format('{0}{1}', parameters('kvNamePrefix'), uniqueString(resourceGroup().id))]"
          },
          "resources": [],
          "outputs": {
            "kvNameOutput": {
              "type": "string",
              "value": "[variables('kvName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "kv",
      "resourceGroup": "[parameters('resourceGroupNames')[0].name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "tags": {
            "value": "[parameters('tags')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "apiKey": {
            "value": "[parameters('apiKey')]"
          },
          "server": {
            "value": "[parameters('server')]"
          },
          "database": {
            "value": "[parameters('database')]"
          },
          "password": {
            "value": "[parameters('localAdminPassword')]"
          },
          "user": {
            "value": "[parameters('localAdminUsername')]"
          },
          "kvName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupNames')[0].name), 'Microsoft.Resources/deployments', 'kvName')).outputs.kvNameOutput.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "10166500660643417515"
            }
          },
          "parameters": {
            "kvName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "server": {
              "type": "secureString"
            },
            "database": {
              "type": "secureString"
            },
            "user": {
              "type": "secureString"
            },
            "password": {
              "type": "secureString"
            },
            "apiKey": {
              "type": "secureString"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-10-01",
              "name": "[parameters('kvName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [],
                "enabledForDeployment": true,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}/{1}', parameters('kvName'), 'server')]",
              "properties": {
                "contentType": "text/plain",
                "value": "[parameters('server')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}/{1}', parameters('kvName'), 'database')]",
              "properties": {
                "contentType": "text/plain",
                "value": "[parameters('database')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}/{1}', parameters('kvName'), 'user')]",
              "properties": {
                "contentType": "text/plain",
                "value": "[parameters('user')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}/{1}', parameters('kvName'), 'password')]",
              "properties": {
                "contentType": "text/plain",
                "value": "[parameters('password')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}/{1}', parameters('kvName'), 'apikey')]",
              "properties": {
                "contentType": "text/plain",
                "value": "[parameters('apiKey')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            }
          ],
          "outputs": {
            "kv": {
              "type": "string",
              "value": "[parameters('kvName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupNames')[0].name), 'Microsoft.Resources/deployments', 'kvName')]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', 'resourceGroupDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "function",
      "resourceGroup": "[parameters('resourceGroupNames')[2].name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "tags": {
            "value": "[parameters('tags')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "stNamePrefix": {
            "value": "[variables('stNamePrefix')]"
          },
          "appServicePlanNamePrefix": {
            "value": "[variables('appServicePlanNamePrefix')]"
          },
          "functionNamePrefix": {
            "value": "[variables('functionNamePrefix')]"
          },
          "kvName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupNames')[0].name), 'Microsoft.Resources/deployments', 'kvName')).outputs.kvNameOutput.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "9381057047142351776"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "appServicePlanNamePrefix": {
              "type": "string"
            },
            "functionNamePrefix": {
              "type": "string"
            },
            "stNamePrefix": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "kvName": {
              "type": "string"
            }
          },
          "variables": {
            "appServicePlanName": "[format('{0}{1}', parameters('appServicePlanNamePrefix'), uniqueString(resourceGroup().id))]",
            "functionName": "[format('{0}{1}', parameters('functionNamePrefix'), uniqueString(resourceGroup().id))]",
            "storageAccountName": "[format('{0}{1}', parameters('stNamePrefix'), uniqueString(resourceGroup().id))]",
            "accountType": "Standard_LRS",
            "kind": "StorageV2",
            "minimumTlsVersion": "TLS1_2",
            "supportsHttpsTrafficOnly": true,
            "allowBlobPublicAccess": false,
            "allowSharedKeyAccess": true,
            "networkAclsBypass": "AzureServices",
            "networkAclsDefaultAction": "Deny",
            "largeFileSharesState": "Enabled"
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-03-01",
              "name": "[variables('functionName')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "location": "[parameters('location')]",
              "kind": "functionapp,linux",
              "tags": "[parameters('tags')]",
              "properties": {
                "hostNameSslStates": [
                  {
                    "name": "[format('{0}.azurewebsites.net', variables('functionName'))]",
                    "sslState": "Disabled",
                    "hostType": "Standard"
                  },
                  {
                    "name": "[format('{0}.scm.azurewebsites.net', variables('functionName'))]",
                    "sslState": "Disabled",
                    "hostType": "Repository"
                  }
                ],
                "enabled": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "python"
                    },
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
                    },
                    {
                      "name": "server",
                      "value": "[format('@Microsoft.KeyVault(SecretUri=https://{0}.vault.azure.net/secrets/server)', parameters('kvName'))]"
                    }
                  ],
                  "numberOfWorkers": 1,
                  "linuxFxVersion": "Python|3.9",
                  "acrUseManagedIdentityCreds": false,
                  "alwaysOn": false,
                  "http20Enabled": false,
                  "functionAppScaleLimit": 200,
                  "minimumElasticInstanceCount": 0
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "customDomainVerificationId": "61AE8477F2145B6AF7100EEC8FD3FFCFB4702811C04010012621EA24BBB80944",
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2018-02-01",
              "name": "[variables('appServicePlanName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
              },
              "kind": "functionapp",
              "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2019-06-01",
              "name": "[variables('storageAccountName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "minimumTlsVersion": "[variables('minimumTlsVersion')]",
                "supportsHttpsTrafficOnly": "[variables('supportsHttpsTrafficOnly')]",
                "allowBlobPublicAccess": "[variables('allowBlobPublicAccess')]",
                "allowSharedKeyAccess": "[variables('allowSharedKeyAccess')]",
                "networkAcls": {
                  "bypass": "[variables('networkAclsBypass')]",
                  "defaultAction": "[variables('networkAclsDefaultAction')]",
                  "ipRules": []
                },
                "largeFileSharesState": "[variables('largeFileSharesState')]"
              },
              "sku": {
                "name": "[variables('accountType')]"
              },
              "kind": "[variables('kind')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupNames')[0].name), 'Microsoft.Resources/deployments', 'kvName')]"
      ]
    }
  ]
}